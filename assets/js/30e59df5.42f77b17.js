"use strict";(self.webpackChunktutorial=self.webpackChunktutorial||[]).push([[182],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(n),h=i,d=m["".concat(l,".").concat(h)]||m[h]||p[h]||a;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4498:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],c={id:"computing-behavior",title:"Computing behavior",keywords:["animation","creative coding","graphics","javascript","three.js","3D","tutorial"]},l=void 0,s={unversionedId:"adding-behavior/computing-behavior",id:"adding-behavior/computing-behavior",title:"Computing behavior",description:"Content in this section is under development.",source:"@site/docs/adding-behavior/computing-behavior.mdx",sourceDirName:"adding-behavior",slug:"/adding-behavior/computing-behavior",permalink:"/ptw310/adding-behavior/computing-behavior",tags:[],version:"current",frontMatter:{id:"computing-behavior",title:"Computing behavior",keywords:["animation","creative coding","graphics","javascript","three.js","3D","tutorial"]},sidebar:"sidebar",previous:{title:"Group behavior",permalink:"/ptw310/adding-behavior/group-behavior"},next:{title:"Putting it together",permalink:"/ptw310/adding-behavior/put-it-together"}},u={},p=[],m={toc:p};function h(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"TO BE DONE")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Content in this section is under development."),(0,a.kt)("p",{parentName:"div"},"This section will cover computing the next state of individual cells and the group as a whole based on the current state."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Grow (or shrink) the given cell based on its growth rate.\n *\n * @param {object} currentCell the cell to grow or shrink\n * @returns {object} a new cell object that has grown (or shrank)\n */\nfunction nextCellBehavior(currentCell) {\n  let { size, growth, maxSize, minSize } = currentCell;\n  size = size + growth;\n\n  // Make sure the new size fits within the cell's maximum and minimum\n  if (growth > 0) {\n    size = Math.min(size, maxSize);\n  } else {\n    size = Math.max(size, minSize);\n  }\n\n  // If the new size is at the cell's maximum or minimum size, reverse the\n  // direction of growth.\n  if (size === minSize || size === maxSize) {\n    growth = growth * -1;\n  }\n\n  return {\n    size,\n    growth,\n    maxSize,\n    minSize,\n  };\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Create a new behavior grid where each cell in the given grid has been\n * resized according to its current growth rate.\n *\n * @param {Array<Array<object>>} currentState\n * @returns {Array<Array<object>>} a two dimensional array of the cells\n */\nfunction nextBehaviorGrid(currentState) {\n  const width = currentState.length;\n  let cells = [];\n\n  for (let x = 0; x < width; x++) {\n    const height = currentState[x].length;\n    cells[x] = [];\n\n    for (let y = 0; y < height; y++) {\n      cells[x][y] = nextCellBehavior(currentState[x][y]);\n    }\n  }\n\n  return cells;\n}\n")))}h.isMDXComponent=!0}}]);