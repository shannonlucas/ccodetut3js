"use strict";(self.webpackChunkptw310_project=self.webpackChunkptw310_project||[]).push([[657],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(n),p=i,g=u["".concat(l,".").concat(p)]||u[p]||h[p]||a;return n?r.createElement(g,o(o({ref:t},d),{},{components:n})):r.createElement(g,o({ref:t},d))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1253:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return h}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],c={id:"creating-grid",title:"Creating the grid",keywords:["creative coding","graphics","javascript","three.js","3D","tutorial"]},l=void 0,s={unversionedId:"adding-objects/creating-grid",id:"adding-objects/creating-grid",title:"Creating the grid",description:"Creating the grid",source:"@site/docs/adding-objects/creating-grid.mdx",sourceDirName:"adding-objects",slug:"/adding-objects/creating-grid",permalink:"/ptw310/adding-objects/creating-grid",tags:[],version:"current",frontMatter:{id:"creating-grid",title:"Creating the grid",keywords:["creative coding","graphics","javascript","three.js","3D","tutorial"]},sidebar:"sidebar",previous:{title:"Creating the objects",permalink:"/ptw310/adding-objects/creating-objects"},next:{title:"Putting it together",permalink:"/ptw310/adding-objects/put-it-together"}},d={},h=[{value:"Creating the grid",id:"creating-the-grid",level:2}],u={toc:h};function p(e){var t=e.components,c=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"creating-the-grid"},"Creating the grid"),(0,a.kt)("p",null,"Now that you have a function to create your cells, you can focus on the function that will create a grid of cells. To keep things more straightforward, you will create a square grid. Consider the grid for a moment and think about what information you might need to build it."),(0,a.kt)("p",null,(0,a.kt)("img",{loading:"lazy",alt:"Image of an eight-by-eight grid of squares",src:n(7676).Z,title:"The grid",width:"512",height:"512"})),(0,a.kt)("p",null,'How many cells tall and wide is the grid? This will be the grid\'s "size." What size are the cells? And finally, how much space is between the cells?'),(0,a.kt)("p",null,"Some math is required to calculate where to put each of the cells you'll be creating. The position of a mesh is actually that mesh's center point; this will affect how you calculate the position of each cell."),(0,a.kt)("p",null,"The first three lines of the function below calculate where to place the cells. The total width of a cell is calculated using the size of the mesh and the size of the spacing. The total size of the grid itself is that value multiplied by the number of cells in the grid."),(0,a.kt)("p",null,"Next, a vector for the mesh size is created. Recall from the previous section that the ",(0,a.kt)("inlineCode",{parentName:"p"},"buildCellVisual")," function copies the information from the vector passed to it. Since every cell is the same size, and the data is copied for each cell, you only need to create a single ",(0,a.kt)("inlineCode",{parentName:"p"},"THREE.Vector3")," with the size\ninformation."),(0,a.kt)("p",null,"After this, an array is created to store the cells it is about to create. Each element of this array will be another array representing a row of the grid. Each element of that inner array will be a cell mesh."),(0,a.kt)("p",null,"The function then loops over the grid's rows, calculates the y-axis coordinate, and creates an array to hold the grid rows. Inside this loop is another loop that iterates over the grid's columns, calculates the x-coordinate, and creates a ",(0,a.kt)("inlineCode",{parentName:"p"},"THREE.Vector3")," for the cell's position. The position and size information are then passed to ",(0,a.kt)("inlineCode",{parentName:"p"},"buildCellVisual"),", and the mesh it returns is stored in the array."),(0,a.kt)("p",null,"Finally, after the function has iterated over every row and column, the cells it created are returned."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function buildGridMeshes(gridSize, cellSize, spacing) {\n  const cellWithSpace = cellSize + spacing;\n  const gridCenter = (gridSize * cellWithSpace) / 2;\n  const offset = (cellWithSpace / 2) - gridCenter;\n\n  const meshSize = new THREE.Vector3(cellSize, cellSize, cellSize);\n\n  const cells = [];\n\n  for (let row = 0; row < gridSize; row++) {\n    const y = (row * cellWithSpace) + offset;\n    cells[row] = [];\n\n    for (let column = 0; column < gridSize; column++) {\n      const x = (column * cellWithSpace) + offset;\n      const position = new THREE.Vector3(x, y, 0);\n\n      cells[row][column] = buildCellMesh(position, meshSize);\n    }\n  }\n\n  return cells;\n}\n")),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Arrays in JavaScript")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"You may have noticed that the ",(0,a.kt)("inlineCode",{parentName:"p"},"cells")," array is used in a row and column fashion rather than x and y like the coordinates. This is because of the way arrays work in JavaScript. To store a grid of data, you have to create an array of arrays. It's a general convention to conceptualize such a structure as a collection of rows that then have columns. There is, however, no technical reason you cannot build this structure as a collection of columns that have rows."))))}p.isMDXComponent=!0},7676:function(e,t,n){t.Z=n.p+"assets/images/square-grid-ee5d43f4b72b38405b37b379843f8377.png"}}]);