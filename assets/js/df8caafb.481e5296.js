"use strict";(self.webpackChunktutorial=self.webpackChunktutorial||[]).push([[275],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=l(n),d=o,g=h["".concat(c,".").concat(d)]||h[d]||p[d]||a;return n?i.createElement(g,r(r({ref:t},u),{},{components:n})):i.createElement(g,r({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var l=2;l<a;l++)r[l]=n[l];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3560:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var i=n(7462),o=n(3366),a=(n(7294),n(3905)),r=["components"],s={id:"adding-lights",title:"Adding lights",keywords:["creative coding","graphics","javascript","three.js","3D","tutorial"]},c=void 0,l={unversionedId:"scene-setup/adding-lights",id:"scene-setup/adding-lights",title:"Adding lights",description:"Your scene needs one or more light sources so the objects in the scene will be visible. Lights can have colors and types (e.g., point lights and spotlights).",source:"@site/docs/scene-setup/adding-lights.mdx",sourceDirName:"scene-setup",slug:"/scene-setup/adding-lights",permalink:"/ccodetut3js/scene-setup/adding-lights",tags:[],version:"current",frontMatter:{id:"adding-lights",title:"Adding lights",keywords:["creative coding","graphics","javascript","three.js","3D","tutorial"]},sidebar:"sidebar",previous:{title:"Getting started",permalink:"/ccodetut3js/scene-setup/getting-started"},next:{title:"Adding the camera",permalink:"/ccodetut3js/scene-setup/adding-camera"}},u={},p=[],h={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Your scene needs one or more light sources so the objects in the scene will be visible. Lights can have colors and types (e.g., point lights and spotlights)."),(0,a.kt)("p",null,"Strictly speaking, lights are not required in a scene. There are situations where the absence of a light source can be used for artistic intent. For example, you could create a scene with a light background where all the objects appeared as silhouettes because there are no lights. It is also possible to create objects that glow."),(0,a.kt)("p",null,"These are things to experiment with as you continue to explore 3D graphics. For this tutorial, you are going to use two light sources."),(0,a.kt)("p",null,"The function below accepts a scene object (you'll create one soon) and adds two ",(0,a.kt)("inlineCode",{parentName:"p"},"PointLight")," light sources to it. You can think of a point light as a candle: it shines equally in all directions."),(0,a.kt)("p",null,"The parameter being passed to ",(0,a.kt)("inlineCode",{parentName:"p"},"PointLight")," is the color of the light. This must be a string with a hexadecimal color code as you would use in HTML or CSS. The first light, ",(0,a.kt)("inlineCode",{parentName:"p"},"light1")," is magenta, and ",(0,a.kt)("inlineCode",{parentName:"p"},"light2")," is cyan."),(0,a.kt)("p",null,"The lights are positioned using the ",(0,a.kt)("inlineCode",{parentName:"p"},".position.set")," method on each light. The ",(0,a.kt)("inlineCode",{parentName:"p"},".position.set")," method takes three parameters: the ",(0,a.kt)("inlineCode",{parentName:"p"},"x"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"y"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"z")," coordinates of the light. For now, they are positioned in an arbitrary fashion that will work for the project you are building in this tutorial."),(0,a.kt)("p",null,"Note that this function does not return anything since it adds the lights directly to the scene object you will pass to it as a parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function setUpLights(scene) {\n  const light1 = new THREE.PointLight("#ea00d9"); // magenta\n  light1.position.set(8, 3, 4);\n  scene.add(light1);\n\n  const light2 = new THREE.PointLight("#0abdc6"); // cyan\n  light2.position.set(-6, 0, 2);\n  scene.add(light2);\n}\n')),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Lights and background color")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"When you copied the CSS for this tutorial, you may have noticed that the background color was not black."),(0,a.kt)("p",{parentName:"div"},"If your lights are in the wrong place, many (or all) of the objects in your scene might be in a shadow and will be rendered as black. If your background is also black, you won't be able to see them, and it might take you some time to figure out where the problem actually is. With a background that has a slight color, you'll be able to see these objects as silhouettes against that color."),(0,a.kt)("p",{parentName:"div"},"When you start a new project, pick a background color other than black, even if you intend to have a black background in the finished scene."))))}d.isMDXComponent=!0}}]);