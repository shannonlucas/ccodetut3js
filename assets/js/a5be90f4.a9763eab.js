"use strict";(self.webpackChunkptw310_project=self.webpackChunkptw310_project||[]).push([[681],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6676:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],s={id:"animation-loop",title:"The animation loop",keywords:["animation","creative coding","graphics","javascript","three.js","3D","tutorial"]},l=void 0,c={unversionedId:"scene-setup/animation-loop",id:"scene-setup/animation-loop",title:"The animation loop",description:"So far, you've focused only on the mechanics of how a scene gets rendered. You'll now move on to when a scene gets rendered and updated.",source:"@site/docs/scene-setup/animation-loop.mdx",sourceDirName:"scene-setup",slug:"/scene-setup/animation-loop",permalink:"/ptw310/scene-setup/animation-loop",tags:[],version:"current",frontMatter:{id:"animation-loop",title:"The animation loop",keywords:["animation","creative coding","graphics","javascript","three.js","3D","tutorial"]},sidebar:"sidebar",previous:{title:"Adding the renderer",permalink:"/ptw310/scene-setup/adding-renderer"},next:{title:"Putting it together",permalink:"/ptw310/scene-setup/put-it-together"}},p={},u=[{value:"Refresh rates and frame rates",id:"refresh-rates-and-frame-rates",level:2},{value:"Tracking time",id:"tracking-time",level:2},{value:"Working with the animation loop",id:"working-with-the-animation-loop",level:2},{value:"The <code>update</code> function",id:"the-update-function",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"So far, you've focused only on the mechanics of how a scene gets rendered. You'll now move on to when a scene gets rendered and updated."),(0,r.kt)("p",null,"The animation loop is an activity that your computer carries out every time it updates, or ",(0,r.kt)("em",{parentName:"p"},"refreshes"),", the image on your display. With every update, your computer will ask your scene to perform any necessary updates and will then render a new image on your screen."),(0,r.kt)("p",null,"This process is akin to stop-motion animation used in film. A character model is set up, a picture is taken, the stage crew makes slight movements to the model, and takes a new picture. When these pictures are shown rapidly in sequence, the viewer sees an animated scene. The principle of the animation loop is similar, but it happens in real time."),(0,r.kt)("h2",{id:"refresh-rates-and-frame-rates"},"Refresh rates and frame rates"),(0,r.kt)("p",null,"Your computer redraws the content on your display many times every second. How often this happens is referred to as the ",(0,r.kt)("em",{parentName:"p"},"refresh rate"),". You may have seen this term in the product data for monitors or televisions with values such as 60 Hz or 120 Hz. The unit Hz (Hertz) means number of times per second. So a display with a 60 Hz refresh rate will redraw the screen 60 times every second."),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"frame rate")," of your animation is how many times your animation updates each second. The frame rate is sometimes the same value as the refresh rate, but it's independent. An animation's frame rate is affected by factors such as how much detail is in the animation and how powerful the computer rendering it is."),(0,r.kt)("p",null,"Why does this matter? You have to govern the frame rate of your animation so that it will render at the same speed on different displays. If you ignore the refresh rate, an animation that works as expected on a 60 Hz display will be twice as fast on a 120 Hz display."),(0,r.kt)("h2",{id:"tracking-time"},"Tracking time"),(0,r.kt)("p",null,"Unfortunately, you can't simply ask what the refresh rate is or specify a desired frame rate using JavaScript. Instead, you'll need to know how many frames per second you intend to draw and keep track of the time the last frame was drawn."),(0,r.kt)("p",null,"This isn't as daunting as it sounds. Time in JavaScript is measured in milliseconds, so you need to calculate how many milliseconds there should be between frame updates. There are 1000 milliseconds in each second. Assume a target frame rate of 60 frames per second, and you can compute the frame time with the line of code below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const MILLISECONDS_PER_FRAME = 1000 / 60;\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"SCREAMING_SNAKE_CASE")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The name of the variable above is written in a format known as \"screaming snake case.\" All the letters in the variable name are in uppercase, and words are separated by an underscore character. This convention is used by three.js to indicate values that won't change and are available to all the functions in a program. This tutorial uses this convention as well. When you see a variable named this way, it's intended for use anywhere in the project's code."))),(0,r.kt)("p",null,"Next, you'll need a variable to keep track of how much time in milliseconds has passed since the last frame was rendered. Set this variable to zero since no frames have been rendered yet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"let lastFrameTime = 0;\n")),(0,r.kt)("h2",{id:"working-with-the-animation-loop"},"Working with the animation loop"),(0,r.kt)("p",null,"You now need a function that you can attach to the animation loop. Your web browser will call this function whenever your computer refreshes your display. When the browser calls the function, it passes a single parameter to it that indicates the time in milliseconds since your animation started."),(0,r.kt)("p",null,"As you learned earlier, you don't necessarily want to update your animation on each refresh. The function computes the elapsed time since it rendered the last frame and checks to see if that time is greater than or equal to the frame time you computed and stored in ",(0,r.kt)("inlineCode",{parentName:"p"},"MILLISECONDS_PER_FRAME"),"."),(0,r.kt)("p",null,"If enough time has passed, your animation will get updated, your scene will be re-rendered, and the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"lastFrameTime")," is set to the current time."),(0,r.kt)("p",null,"This sequence of events will repeat each time the animation loop calls this function."),(0,r.kt)("p",null,"Take note of the ",(0,r.kt)("inlineCode",{parentName:"p"},"update")," function on the highlighted line in this code block. You'll create this function soon. Also note that you are making use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"scene"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"camera"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"renderer")," that you created in the previous section."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"function animate(animationTime) {\n  const elapsedTime = animationTime - lastFrameTime;\n\n  if (elapsedTime >= MILLISECONDS_PER_FRAME) {\n    // highlight-next-line\n    update();\n    renderer.render(scene, camera);\n    lastFrameTime = animationTime;\n  }\n}\n")),(0,r.kt)("p",null,"Now you need to let the browser know to start calling this function as part of the animation loop. The following line of code will add the ",(0,r.kt)("inlineCode",{parentName:"p"},"animate")," function to the animation loop and start rendering your scene."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"renderer.setAnimationLoop(animate);\n")),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Functions can be parameters to other functions")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Notice that the value passed to the function ",(0,r.kt)("inlineCode",{parentName:"p"},"setAnimationLoop")," is not surrounded by quote marks. You are passing the function itself as a parameter rather than a string containing a function name."))),(0,r.kt)("h2",{id:"the-update-function"},"The ",(0,r.kt)("inlineCode",{parentName:"h2"},"update")," function"),(0,r.kt)("p",null,"When you created the ",(0,r.kt)("inlineCode",{parentName:"p"},"animate")," function above, you made use of a function named ",(0,r.kt)("inlineCode",{parentName:"p"},"update")," that you had not yet created. You'll find this function below, and, as you can see, it is empty."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"function update() {\n  // Your project's animation code will go here.\n}\n")),(0,r.kt)("p",null,"As you progress through the project, you'll put any code that updates your scene in this function. Controlling the frame rate is something you'll do in every future project involving three.js. By moving the code that's specific to just one project into a separate function, you can now reuse the ",(0,r.kt)("inlineCode",{parentName:"p"},"animate")," function in other projects. In fact, all the code you've assembled so far can be used with other projects as-is."))}d.isMDXComponent=!0}}]);